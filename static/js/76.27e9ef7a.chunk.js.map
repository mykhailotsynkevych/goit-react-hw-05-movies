{"version":3,"file":"static/js/76.27e9ef7a.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOF,IAAAA,IACA,sBAAuB,CACxBG,OAAQ,CACRC,QAASH,KAGRI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACrB,EAEYC,EAAkB,SAACC,GAC9B,OAAOT,IAAAA,IACE,gBAAiB,CAClBG,OAAQ,CACVO,MAAOD,EACPL,QAASH,KAGRI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACrB,EAQKI,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQR,EADR,QAEkBU,GAFlB,iCAGYV,EAASW,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,EAAaC,GAC3B,OAAOV,EAAuB,GAAD,OAAID,EAAJ,kBAAsBW,EAAtB,oBAAoCrB,EAApC,mBAC9B,CAEM,SAASsB,EAAqBD,GACnC,OAAOV,EAAuB,GAAD,OAAID,EAAJ,kBAAsBW,EAAtB,4BAA4CrB,EAA5C,mBAC9B,CAEM,SAASuB,EAAwBF,GACtC,OAAOV,EAAuB,GAAD,OAAID,EAAJ,kBAAsBW,EAAtB,4BAA4CrB,EAA5C,mBAC9B,C,+GClDD,EAA8B,0B,SCIf,SAASwB,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOD,EAAP,KAAaE,EAAb,KACQL,GAAOM,EAAAA,EAAAA,MAAPN,GAKR,OAHAO,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAqBD,GAAIjB,MAAK,SAAAE,GAAI,OAAIoB,EAAQpB,EAAKuB,KAAjB,GACnC,GAAE,CAACR,KAEF,8BACGG,IACC,eAAIM,UAAWC,EAAf,SACGP,EAAKQ,KAAI,SAAAC,GAAE,OACV,wBAEGA,EAAGC,eAAiB,iCACnB,gBACEC,IAAG,yCAAoCF,EAAGC,cAC1CE,IAAI,GACJC,MAAM,SAEM,uBAAIJ,EAAGK,iBACvB,uCAAeL,EAAGM,iBATXN,EAAGZ,GADF,OAmBrB,C","sources":["api/themoviedb-api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7636cf9d603a531a6043a00a518eaa9c';\n\nexport const getTrandingMovies = () => {\n  return axios\n    .get('trending/movie/day?', {\n        params: {\n        api_key: API_KEY,\n      },\n    })\n        .then(response => response.data) \n};\n\nexport const getSearchMovies = (searchMovie) => {\n  return axios\n      .get('search/movie?', {\n          params: {\n        query: searchMovie,\n        api_key: API_KEY,\n      },\n    })\n        .then(response => response.data) \n};\n\n// export const getMovieById = (id) => {\n//   return axios\n//       .get('movie/${id}?api_key=7636cf9d603a531a6043a00a518eaa9c&language=en-US')\n         \n// };\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function getMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getCastFromMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getReviewsFromMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getImageFormMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/images?api_key=${API_KEY}&language=en-US`);\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"actorsCards\":\"Cast_actorsCards__Dippj\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCastFromMovieById } from '../../api/themoviedb-api';\nimport s from './Cast.module.css';\n\nexport default function Cast() {\n  const [Cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getCastFromMovieById(id).then(data => setCast(data.cast));\n  }, [id]);\n  return (\n    <>\n      {Cast && (\n        <ul className={s.actorsCards}>\n          {Cast.map(el => (\n            <li key={el.id}>\n              \n              {el.profile_path && (<>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${el.profile_path}`}\n                  alt=\"\"\n                  width=\"150\"\n                />\n                              <p>{el.original_name}</p>\n              <p>Character: {el.character}</p></>\n              )}\n\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","getTrandingMovies","params","api_key","then","response","data","getSearchMovies","searchMovie","query","BASE_URL","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","getMovieById","id","getCastFromMovieById","getReviewsFromMovieById","Cast","useState","setCast","useParams","useEffect","cast","className","s","map","el","profile_path","src","alt","width","original_name","character"],"sourceRoot":""}