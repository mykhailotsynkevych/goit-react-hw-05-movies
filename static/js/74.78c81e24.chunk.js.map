{"version":3,"file":"static/js/74.78c81e24.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOF,IAAAA,IACA,sBAAuB,CACxBG,OAAQ,CACRC,QAASH,KAGRI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACrB,EAEYC,EAAkB,SAACC,GAC9B,OAAOT,IAAAA,IACE,gBAAiB,CAClBG,OAAQ,CACVO,MAAOD,EACPL,QAASH,KAGRI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACrB,EAQKI,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQR,EADR,QAEkBU,GAFlB,iCAGYV,EAASW,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,EAAaC,GAC3B,OAAOV,EAAuB,GAAD,OAAID,EAAJ,kBAAsBW,EAAtB,oBAAoCrB,EAApC,mBAC9B,CAEM,SAASsB,EAAqBD,GACnC,OAAOV,EAAuB,GAAD,OAAID,EAAJ,kBAAsBW,EAAtB,4BAA4CrB,EAA5C,mBAC9B,CAEM,SAASuB,EAAwBF,GACtC,OAAOV,EAAuB,GAAD,OAAID,EAAJ,kBAAsBW,EAAtB,4BAA4CrB,EAA5C,mBAC9B,C,0HClDD,EAA4B,gCAA5B,EAA+E,uC,sCCGzEwB,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,ybAkBHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,EC0CD,EAhEsB,WAAO,IAAD,IAC1B,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACQZ,GAAOa,EAAAA,EAAAA,MAAPb,GAGFc,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAM7C,OAJAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,IAAaC,GAAIjB,KAAK6B,EACvB,GAAE,CAACZ,KAGF,iCACE,SAACM,EAAD,CAAUC,GAAIO,EAAd,4BACCH,IACC,iCACE,iBAAKQ,UAAWC,EAAhB,WACE,gBACEC,IAAI,0EACJC,IAAKX,EAAQY,MACbC,MAAM,SAER,iBAAKL,UAAWC,EAAhB,WACE,0BAAKT,EAAQY,MAAb,OACCZ,EAAQc,eACP,mCAAWd,EAAQc,aAAaC,MAAM,EAAG,GAAzC,QAEF,sCACA,uBAAIf,EAAQgB,YACZ,mCACChB,EAAQiB,SACP,wBACGjB,EAAQiB,OAAOC,KAAI,SAAAC,GAAE,OACpB,yBACE,uBAAIA,EAAGC,QADAD,EAAG9B,GADQ,OAO1B,mCACCW,EAAQqB,eACP,6BAAKrB,EAAQqB,aAAaC,QAAQ,GAAlC,cAKN,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM1B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGR,SAAC,EAAA2B,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAMP,C","sources":["api/themoviedb-api.js","webpack://react-homework-template/./src/components/MoviesDetails/MovieDetails.module.css?079b","components/BackLink/BackLink.jsx","components/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7636cf9d603a531a6043a00a518eaa9c';\n\nexport const getTrandingMovies = () => {\n  return axios\n    .get('trending/movie/day?', {\n        params: {\n        api_key: API_KEY,\n      },\n    })\n        .then(response => response.data) \n};\n\nexport const getSearchMovies = (searchMovie) => {\n  return axios\n      .get('search/movie?', {\n          params: {\n        query: searchMovie,\n        api_key: API_KEY,\n      },\n    })\n        .then(response => response.data) \n};\n\n// export const getMovieById = (id) => {\n//   return axios\n//       .get('movie/${id}?api_key=7636cf9d603a531a6043a00a518eaa9c&language=en-US')\n         \n// };\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function getMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getCastFromMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getReviewsFromMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getImageFormMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/images?api_key=${API_KEY}&language=en-US`);\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"moviePage\":\"MovieDetails_moviePage__IAq2o\",\"movieDiscription\":\"MovieDetails_movieDiscription__jtZVj\"};","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #2196f3;\n          transform: scale(1.01);\n        text-shadow: 0 1px 1px rgb(0 0 0 / 12%), 0 1px 1px rgb(0 0 0 / 14%), 0 1px 1px rgb(0 0 0 / 20%);\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieById } from '../../api/themoviedb-api';\nimport { Link, Outlet } from 'react-router-dom';\nimport s from './MovieDetails.module.css';\nimport { BackLink } from \"../BackLink/BackLink\";\n\nconst MoviesDetails = () => {\n  const [idMovie, setIdMovie] = useState({});\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/movies\";\n\n  useEffect(() => {\n    getMovieById(id).then(setIdMovie);\n  }, [id]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Back to movies</BackLink>\n      {idMovie && (\n        <>\n          <div className={s.moviePage}>\n            <img\n              src=\"https://www.themoviedb.org/t/p/original/vUUqzWa2LnHIVqkaKVlVGkVcZIW.jpg\"\n              alt={idMovie.title}\n              width=\"250\"\n            />\n            <div className={s.movieDiscription}>\n              <h1>{idMovie.title} </h1>\n              {idMovie.release_date && (\n                <h2>Year: {idMovie.release_date.slice(0, 4)} </h2>\n              )}\n              <h4>Overview</h4>\n              <p>{idMovie.overview}</p>\n              <h4>Genres</h4>\n              {idMovie.genres && (\n                <ul>\n                  {idMovie.genres.map(el => (\n                    <li key={el.id}>\n                      <p>{el.name}</p>\n                    </li>\n                  ))}\n                </ul>\n              )}\n              <h4>Rating</h4>\n              {idMovie.vote_average && (\n                <p> {idMovie.vote_average.toFixed(1)} </p>\n              )}\n            </div>\n          </div>\n\n          <h4>Additional information</h4>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MoviesDetails;"],"names":["axios","API_KEY","getTrandingMovies","params","api_key","then","response","data","getSearchMovies","searchMovie","query","BASE_URL","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","getMovieById","id","getCastFromMovieById","getReviewsFromMovieById","StyledLink","styled","Link","BackLink","to","children","size","useState","idMovie","setIdMovie","useParams","backLinkHref","useLocation","state","from","useEffect","className","s","src","alt","title","width","release_date","slice","overview","genres","map","el","name","vote_average","toFixed","Suspense","fallback"],"sourceRoot":""}