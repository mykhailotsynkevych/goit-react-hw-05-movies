{"version":3,"file":"static/js/797.95eecc9e.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOF,IAAAA,IACA,sBAAuB,CACxBG,OAAQ,CACRC,QAASH,KAGRI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACrB,EAEYC,EAAkB,SAACC,GAC9B,OAAOT,IAAAA,IACE,gBAAiB,CAClBG,OAAQ,CACVO,MAAOD,EACPL,QAASH,KAGRI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACrB,EAQKI,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQR,EADR,QAEkBU,GAFlB,iCAGYV,EAASW,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,EAAaC,GAC3B,OAAOV,EAAuB,GAAD,OAAID,EAAJ,kBAAsBW,EAAtB,oBAAoCrB,EAApC,mBAC9B,CAEM,SAASsB,EAAqBD,GACnC,OAAOV,EAAuB,GAAD,OAAID,EAAJ,kBAAsBW,EAAtB,4BAA4CrB,EAA5C,mBAC9B,CAEM,SAASuB,EAAwBF,GACtC,OAAOV,EAAuB,GAAD,OAAID,EAAJ,kBAAsBW,EAAtB,4BAA4CrB,EAA5C,mBAC9B,C,uDCtBD,IAzBmB,SAAC,GAA2B,IAAzBwB,EAAwB,EAAxBA,kBACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAkBG,KAAI,SAAAC,GAAE,OACvB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGP,IAAMS,MAAO,CAAEC,KAAMN,GAA7C,SACGG,EAAGI,SAFCJ,EAAGP,GADW,KAS9B,C,uDCjBD,MAAwB,2B,SCCT,SAASY,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIC,UAAWC,EAAf,SAAyBF,GACjC,C,qGCuDD,UApDmB,WACjB,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAO5B,EAAP,KAAc6B,EAAd,KACA,GAAkDD,EAAAA,EAAAA,UAAS,IAA3D,eAAOb,EAAP,KAA0Be,EAA1B,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAuB/B,OANAC,EAAAA,EAAAA,YAAU,WACHF,IAELpC,EAAAA,EAAAA,IAAgBoC,GAAOvC,MAAK,gBAAG0C,EAAH,EAAGA,QAAH,OAAiBP,EAAqBO,EAAtC,IAAgDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACtF,GAAE,CAACL,KAGF,iCACE,SAAC,IAAD,CAAaT,KAAK,YAElB,kBAAMC,UAAU,aAAagB,SArBZ,SAAAC,GACnBA,EAAEC,iBAEmB,KAAjB5C,EAAM6C,QAIVZ,EAAgB,CAAEC,MAAOlC,IACzB6B,EAAS,KAJPiB,MAAM,mFAKT,EAYG,WACE,kBACEpB,UAAU,mBACVqB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAhCiB,SAAAC,GACvBvB,EAASuB,EAAMC,OAAOC,MACvB,EA+BOA,MAAOtD,KAET,mBAAQ+C,KAAK,SAASrB,UAAU,oBAAhC,UACE,iBAAM6B,MAAO,CAAEC,SAAU,IAAzB,yBAIHtB,IAAS,SAAC,IAAD,CAAYnB,kBAAmBA,MAG9C,C","sources":["api/themoviedb-api.js","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7636cf9d603a531a6043a00a518eaa9c';\n\nexport const getTrandingMovies = () => {\n  return axios\n    .get('trending/movie/day?', {\n        params: {\n        api_key: API_KEY,\n      },\n    })\n        .then(response => response.data) \n};\n\nexport const getSearchMovies = (searchMovie) => {\n  return axios\n      .get('search/movie?', {\n          params: {\n        query: searchMovie,\n        api_key: API_KEY,\n      },\n    })\n        .then(response => response.data) \n};\n\n// export const getMovieById = (id) => {\n//   return axios\n//       .get('movie/${id}?api_key=7636cf9d603a531a6043a00a518eaa9c&language=en-US')\n         \n// };\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function getMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getCastFromMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getReviewsFromMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getImageFormMovieById(id) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}/images?api_key=${API_KEY}&language=en-US`);\n}\n\n","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ searchMovieResult }) => {\n  const location = useLocation();\n  \n  return (\n    <ul>\n      {searchMovieResult.map(el => (\n        <li key={el.id}>\n          <Link to={`/movies/${el.id}`} state={{ from: location }}>\n            {el.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  searchMovieResult: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}","import PageHeading from '../components/PageHeading/PageHeading';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovies } from '../api/themoviedb-api';\n\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [searchMovieResult, setSearchMovieResult] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('movie');\n\n  const handleNameChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Введите запрос.');\n      return;\n    }\n    setSearchParams({ movie: query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (!movie) return;\n\n    getSearchMovies(movie).then(({ results }) => setSearchMovieResult(results)).catch(err => console.log(err));\n  }, [movie]);\n\n  return (\n    <>\n      <PageHeading text=\"Movies\" />\n\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleNameChange}\n          value={query}\n        />\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span style={{ fontSize: 30 }}>&#9906;</span>\n        </button>\n      </form>\n\n      {movie && <MoviesList searchMovieResult={searchMovieResult} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","API_KEY","getTrandingMovies","params","api_key","then","response","data","getSearchMovies","searchMovie","query","BASE_URL","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","getMovieById","id","getCastFromMovieById","getReviewsFromMovieById","searchMovieResult","location","useLocation","map","el","to","state","from","title","PageHeading","text","className","s","useState","setQuery","setSearchMovieResult","useSearchParams","searchParams","setSearchParams","movie","get","useEffect","results","catch","err","console","log","onSubmit","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","event","target","value","style","fontSize"],"sourceRoot":""}